// Code generated by "stringer -type=Orientations"; DO NOT EDIT.

package picinfo

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NoOrient-0]
	_ = x[Rotated0-1]
	_ = x[FlippedH-2]
	_ = x[Rotated180-3]
	_ = x[FlippedV-4]
	_ = x[FlippedHRotated90L-5]
	_ = x[Rotated90L-6]
	_ = x[FlippedHRotated90R-7]
	_ = x[Rotated90R-8]
	_ = x[OrientUndef-9]
	_ = x[OrientationsN-10]
}

const _Orientations_name = "NoOrientRotated0FlippedHRotated180FlippedVFlippedHRotated90LRotated90LFlippedHRotated90RRotated90ROrientUndefOrientationsN"

var _Orientations_index = [...]uint8{0, 8, 16, 24, 34, 42, 60, 70, 88, 98, 109, 122}

func (i Orientations) String() string {
	if i < 0 || i >= Orientations(len(_Orientations_index)-1) {
		return "Orientations(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Orientations_name[_Orientations_index[i]:_Orientations_index[i+1]]
}

func (i *Orientations) FromString(s string) error {
	for j := 0; j < len(_Orientations_index)-1; j++ {
		if s == _Orientations_name[_Orientations_index[j]:_Orientations_index[j+1]] {
			*i = Orientations(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Orientations")
}
